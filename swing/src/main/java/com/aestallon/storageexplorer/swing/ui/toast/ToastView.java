package com.aestallon.storageexplorer.swing.ui.toast;

import java.awt.*;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.LineBorder;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import com.aestallon.storageexplorer.swing.ui.misc.IconProvider;
import com.aestallon.storageexplorer.swing.ui.misc.Severity;

public class ToastView {
  private JLabel title;
  private JTextPane message;
  private JButton button1;
  private JPanel mainPanel;

  public ToastView(final Severity severity, final String title, final String message) {
    final Border border;
    final ImageIcon icon;
    switch (severity) {
      case ERROR -> {
        border = new LineBorder(Color.RED, 2, true);
        icon = IconProvider.ERROR;
      }
      case WARNING -> {
        border = new LineBorder(new Color(0xFF, 213, 79), 2, true);
        icon = IconProvider.WARNING;
      }
      case INFO -> {
        border = new LineBorder(new Color(66, 148, 255), 2, true);
        icon = IconProvider.INFO;
      }
      case null, default -> throw new IllegalArgumentException("Severity must not be null!");
    }

    this.title.setIcon(icon);
    this.title.setText(title);
    this.title.setFont(UIManager.getFont("h4.font"));
    mainPanel.setBorder(border);
    this.message.setText(message);
  }

  JPanel getMainPanel() {
    return mainPanel;
  }
  
  JButton getCloseButton() {
    return button1;
  }

  {
    // GUI initializer generated by IntelliJ IDEA GUI Designer
    // >>> IMPORTANT!! <<<
    // DO NOT EDIT OR ADD ANY CODE HERE!
    $$$setupUI$$$();
  }

  /**
   * Method generated by IntelliJ IDEA GUI Designer >>> IMPORTANT!! <<< DO NOT edit this method OR
   * call it in your code!
   *
   * @noinspection ALL
   */
  private void $$$setupUI$$$() {
    mainPanel = new JPanel();
    mainPanel.setLayout(new GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), -1, -1));
    mainPanel.setInheritsPopupMenu(true);
    mainPanel.setMaximumSize(new Dimension(400, 2147483647));
    mainPanel.setMinimumSize(new Dimension(400, 130));
    mainPanel.setPreferredSize(new Dimension(400, 130));
    title = new JLabel();
    title.setText("Label");
    mainPanel.add(title,
        new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED,
            new Dimension(350, 25), new Dimension(350, 25), new Dimension(350, 25), 0, false));
    message = new JTextPane();
    message.setEditable(false);
    message.setEnabled(false);
    message.setFocusCycleRoot(false);
    mainPanel.add(message,
        new GridConstraints(1, 0, 1, 3, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH,
            GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null,
            new Dimension(150, 50), null, 5, false));
    button1 = new JButton();
    button1.setBorderPainted(false);
    button1.setDefaultCapable(false);
    button1.setFocusCycleRoot(false);
    button1.setFocusPainted(false);
    button1.setIcon(new ImageIcon(getClass().getResource("/icons/close.png")));
    button1.setText("");
    mainPanel.add(button1, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER,
        GridConstraints.FILL_HORIZONTAL,
        GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
        GridConstraints.SIZEPOLICY_FIXED, new Dimension(25, 25), new Dimension(25, 25),
        new Dimension(25, 25), 0, false));
    final Spacer spacer1 = new Spacer();
    mainPanel.add(spacer1, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER,
        GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null,
        0, false));
  }

  /** @noinspection ALL */
  public JComponent $$$getRootComponent$$$() {return mainPanel;}

}
